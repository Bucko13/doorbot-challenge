// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResetPassword Component displays error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): ShallowWrapper {
    "length": 1,
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <ResetPassword
      error="Invalid username or password"
      form={
            Object {
                  "password": "",
                }
      }
      onChangePassword={[Function]}
      onSubmit={[Function]}
/>,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Header
            as="h1"
>
            Please set a new password
</Header>,
          <Message
            content="Invalid username or password"
            data-test="error"
            error={true}
            header="Failed to reset password"
/>,
          <Form
            as="form"
            data-test="form"
            onSubmit={[Function]}
>
            <FormField>
                        <label>
                                    New Password
                        </label>
                        <input
                                    data-test="password"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                        />
            </FormField>
            <Button
                        as="button"
                        color="teal"
                        type="submit"
            >
                        Set new password
            </Button>
</Form>,
        ],
        "padded": "very",
        "size": "tiny",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "h1",
            "children": "Please set a new password",
          },
          "ref": null,
          "rendered": "Please set a new password",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "content": "Invalid username or password",
            "data-test": "error",
            "error": true,
            "header": "Failed to reset password",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "form",
            "children": Array [
              <FormField>
                <label>
                                New Password
                </label>
                <input
                                data-test="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                />
</FormField>,
              <Button
                as="button"
                color="teal"
                type="submit"
>
                Set new password
</Button>,
            ],
            "data-test": "form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <label>
                    New Password
</label>,
                  <input
                    data-test="password"
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
                    value=""
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "New Password",
                  },
                  "ref": null,
                  "rendered": "New Password",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "data-test": "password",
                    "onChange": [Function],
                    "placeholder": "Password",
                    "type": "password",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "children": "Set new password",
                "color": "teal",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Set new password",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Header
              as="h1"
>
              Please set a new password
</Header>,
            <Message
              content="Invalid username or password"
              data-test="error"
              error={true}
              header="Failed to reset password"
/>,
            <Form
              as="form"
              data-test="form"
              onSubmit={[Function]}
>
              <FormField>
                            <label>
                                          New Password
                            </label>
                            <input
                                          data-test="password"
                                          onChange={[Function]}
                                          placeholder="Password"
                                          type="password"
                                          value=""
                            />
              </FormField>
              <Button
                            as="button"
                            color="teal"
                            type="submit"
              >
                            Set new password
              </Button>
</Form>,
          ],
          "padded": "very",
          "size": "tiny",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "h1",
              "children": "Please set a new password",
            },
            "ref": null,
            "rendered": "Please set a new password",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "content": "Invalid username or password",
              "data-test": "error",
              "error": true,
              "header": "Failed to reset password",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "form",
              "children": Array [
                <FormField>
                  <label>
                                    New Password
                  </label>
                  <input
                                    data-test="password"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                  />
</FormField>,
                <Button
                  as="button"
                  color="teal"
                  type="submit"
>
                  Set new password
</Button>,
              ],
              "data-test": "form",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <label>
                      New Password
</label>,
                    <input
                      data-test="password"
                      onChange={[Function]}
                      placeholder="Password"
                      type="password"
                      value=""
/>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "New Password",
                    },
                    "ref": null,
                    "rendered": "New Password",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "data-test": "password",
                      "onChange": [Function],
                      "placeholder": "Password",
                      "type": "password",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "children": "Set new password",
                  "color": "teal",
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Set new password",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
        },
      },
    },
  },
  Symbol(enzyme.__unrendered__): null,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "content": "Invalid username or password",
      "data-test": "error",
      "error": true,
      "header": "Failed to reset password",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "content": "Invalid username or password",
        "data-test": "error",
        "error": true,
        "header": "Failed to reset password",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ResetPassword Component starts with an empty form 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResetPassword
    form={
        Object {
            "password": "",
          }
    }
    onChangePassword={[Function]}
    onSubmit={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Header
          as="h1"
>
          Please set a new password
</Header>,
        null,
        <Form
          as="form"
          data-test="form"
          onSubmit={[Function]}
>
          <FormField>
                    <label>
                              New Password
                    </label>
                    <input
                              data-test="password"
                              onChange={[Function]}
                              placeholder="Password"
                              type="password"
                              value=""
                    />
          </FormField>
          <Button
                    as="button"
                    color="teal"
                    type="submit"
          >
                    Set new password
          </Button>
</Form>,
      ],
      "padded": "very",
      "size": "tiny",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "h1",
          "children": "Please set a new password",
        },
        "ref": null,
        "rendered": "Please set a new password",
        "type": [Function],
      },
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "as": "form",
          "children": Array [
            <FormField>
              <label>
                            New Password
              </label>
              <input
                            data-test="password"
                            onChange={[Function]}
                            placeholder="Password"
                            type="password"
                            value=""
              />
</FormField>,
            <Button
              as="button"
              color="teal"
              type="submit"
>
              Set new password
</Button>,
          ],
          "data-test": "form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <label>
                  New Password
</label>,
                <input
                  data-test="password"
                  onChange={[Function]}
                  placeholder="Password"
                  type="password"
                  value=""
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "New Password",
                },
                "ref": null,
                "rendered": "New Password",
                "type": "label",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "data-test": "password",
                  "onChange": [Function],
                  "placeholder": "Password",
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": "Set new password",
              "color": "teal",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Set new password",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Header
            as="h1"
>
            Please set a new password
</Header>,
          null,
          <Form
            as="form"
            data-test="form"
            onSubmit={[Function]}
>
            <FormField>
                        <label>
                                    New Password
                        </label>
                        <input
                                    data-test="password"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    type="password"
                                    value=""
                        />
            </FormField>
            <Button
                        as="button"
                        color="teal"
                        type="submit"
            >
                        Set new password
            </Button>
</Form>,
        ],
        "padded": "very",
        "size": "tiny",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "h1",
            "children": "Please set a new password",
          },
          "ref": null,
          "rendered": "Please set a new password",
          "type": [Function],
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "form",
            "children": Array [
              <FormField>
                <label>
                                New Password
                </label>
                <input
                                data-test="password"
                                onChange={[Function]}
                                placeholder="Password"
                                type="password"
                                value=""
                />
</FormField>,
              <Button
                as="button"
                color="teal"
                type="submit"
>
                Set new password
</Button>,
            ],
            "data-test": "form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <label>
                    New Password
</label>,
                  <input
                    data-test="password"
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
                    value=""
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "New Password",
                  },
                  "ref": null,
                  "rendered": "New Password",
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "data-test": "password",
                    "onChange": [Function],
                    "placeholder": "Password",
                    "type": "password",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "children": "Set new password",
                "color": "teal",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Set new password",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
