// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login Component displays error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): ShallowWrapper {
    "length": 1,
    Symbol(enzyme.__root__): [Circular],
    Symbol(enzyme.__unrendered__): <Login
      error="Invalid username or password"
      form={
            Object {
                  "password": "",
                  "username": "",
                }
      }
      onChangePassword={[Function]}
      onChangeUser={[Function]}
      onSubmit={[Function]}
/>,
    Symbol(enzyme.__renderer__): Object {
      "batchedUpdates": [Function],
      "getNode": [Function],
      "render": [Function],
      "simulateEvent": [Function],
      "unmount": [Function],
    },
    Symbol(enzyme.__node__): Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <GridColumn
          style={
                    Object {
                              "maxWidth": 450,
                            }
          }
>
          <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
          >
                    Log-in to your account
          </Header>
          <Message
                    content="Invalid username or password"
                    data-test="error"
                    error={true}
                    header="Login failed"
          />
          <Form
                    as="form"
                    data-test="form"
                    onSubmit={[Function]}
                    size="large"
          >
                    <Segment
                              stacked={true}
                    >
                              <FormInput
                                        as={[Function]}
                                        control={[Function]}
                                        data-test="username"
                                        fluid={true}
                                        icon="user"
                                        iconPosition="left"
                                        onChange={[Function]}
                                        placeholder="Username"
                                        required={true}
                                        value=""
                              />
                              <FormInput
                                        as={[Function]}
                                        control={[Function]}
                                        data-test="password"
                                        fluid={true}
                                        icon="lock"
                                        iconPosition="left"
                                        onChange={[Function]}
                                        placeholder="Password"
                                        required={true}
                                        type="password"
                                        value=""
                              />
                              <Button
                                        as="button"
                                        color="teal"
                                        fluid={true}
                                        size="large"
                                        type="submit"
                              >
                                        Login
                              </Button>
                    </Segment>
          </Form>
</GridColumn>,
        "style": Object {
          "height": "100%",
        },
        "textAlign": "center",
        "verticalAlign": "middle",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Header
              as="h2"
              color="teal"
              textAlign="center"
>
              Log-in to your account
</Header>,
            <Message
              content="Invalid username or password"
              data-test="error"
              error={true}
              header="Login failed"
/>,
            <Form
              as="form"
              data-test="form"
              onSubmit={[Function]}
              size="large"
>
              <Segment
                            stacked={true}
              >
                            <FormInput
                                          as={[Function]}
                                          control={[Function]}
                                          data-test="username"
                                          fluid={true}
                                          icon="user"
                                          iconPosition="left"
                                          onChange={[Function]}
                                          placeholder="Username"
                                          required={true}
                                          value=""
                            />
                            <FormInput
                                          as={[Function]}
                                          control={[Function]}
                                          data-test="password"
                                          fluid={true}
                                          icon="lock"
                                          iconPosition="left"
                                          onChange={[Function]}
                                          placeholder="Password"
                                          required={true}
                                          type="password"
                                          value=""
                            />
                            <Button
                                          as="button"
                                          color="teal"
                                          fluid={true}
                                          size="large"
                                          type="submit"
                            >
                                          Login
                            </Button>
              </Segment>
</Form>,
          ],
          "style": Object {
            "maxWidth": 450,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "h2",
              "children": "Log-in to your account",
              "color": "teal",
              "textAlign": "center",
            },
            "ref": null,
            "rendered": "Log-in to your account",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "content": "Invalid username or password",
              "data-test": "error",
              "error": true,
              "header": "Login failed",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "form",
              "children": <Segment
                stacked={true}
>
                <FormInput
                                as={[Function]}
                                control={[Function]}
                                data-test="username"
                                fluid={true}
                                icon="user"
                                iconPosition="left"
                                onChange={[Function]}
                                placeholder="Username"
                                required={true}
                                value=""
                />
                <FormInput
                                as={[Function]}
                                control={[Function]}
                                data-test="password"
                                fluid={true}
                                icon="lock"
                                iconPosition="left"
                                onChange={[Function]}
                                placeholder="Password"
                                required={true}
                                type="password"
                                value=""
                />
                <Button
                                as="button"
                                color="teal"
                                fluid={true}
                                size="large"
                                type="submit"
                >
                                Login
                </Button>
</Segment>,
              "data-test": "form",
              "onSubmit": [Function],
              "size": "large",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    data-test="username"
                    fluid={true}
                    icon="user"
                    iconPosition="left"
                    onChange={[Function]}
                    placeholder="Username"
                    required={true}
                    value=""
/>,
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    data-test="password"
                    fluid={true}
                    icon="lock"
                    iconPosition="left"
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
                    value=""
/>,
                  <Button
                    as="button"
                    color="teal"
                    fluid={true}
                    size="large"
                    type="submit"
>
                    Login
</Button>,
                ],
                "stacked": true,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": [Function],
                    "control": [Function],
                    "data-test": "username",
                    "fluid": true,
                    "icon": "user",
                    "iconPosition": "left",
                    "onChange": [Function],
                    "placeholder": "Username",
                    "required": true,
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": [Function],
                    "control": [Function],
                    "data-test": "password",
                    "fluid": true,
                    "icon": "lock",
                    "iconPosition": "left",
                    "onChange": [Function],
                    "placeholder": "Password",
                    "required": true,
                    "type": "password",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Login",
                    "color": "teal",
                    "fluid": true,
                    "size": "large",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Login",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    Symbol(enzyme.__nodes__): Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <GridColumn
            style={
                        Object {
                                    "maxWidth": 450,
                                  }
            }
>
            <Header
                        as="h2"
                        color="teal"
                        textAlign="center"
            >
                        Log-in to your account
            </Header>
            <Message
                        content="Invalid username or password"
                        data-test="error"
                        error={true}
                        header="Login failed"
            />
            <Form
                        as="form"
                        data-test="form"
                        onSubmit={[Function]}
                        size="large"
            >
                        <Segment
                                    stacked={true}
                        >
                                    <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                data-test="username"
                                                fluid={true}
                                                icon="user"
                                                iconPosition="left"
                                                onChange={[Function]}
                                                placeholder="Username"
                                                required={true}
                                                value=""
                                    />
                                    <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                data-test="password"
                                                fluid={true}
                                                icon="lock"
                                                iconPosition="left"
                                                onChange={[Function]}
                                                placeholder="Password"
                                                required={true}
                                                type="password"
                                                value=""
                                    />
                                    <Button
                                                as="button"
                                                color="teal"
                                                fluid={true}
                                                size="large"
                                                type="submit"
                                    >
                                                Login
                                    </Button>
                        </Segment>
            </Form>
</GridColumn>,
          "style": Object {
            "height": "100%",
          },
          "textAlign": "center",
          "verticalAlign": "middle",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Header
                as="h2"
                color="teal"
                textAlign="center"
>
                Log-in to your account
</Header>,
              <Message
                content="Invalid username or password"
                data-test="error"
                error={true}
                header="Login failed"
/>,
              <Form
                as="form"
                data-test="form"
                onSubmit={[Function]}
                size="large"
>
                <Segment
                                stacked={true}
                >
                                <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                data-test="username"
                                                fluid={true}
                                                icon="user"
                                                iconPosition="left"
                                                onChange={[Function]}
                                                placeholder="Username"
                                                required={true}
                                                value=""
                                />
                                <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                data-test="password"
                                                fluid={true}
                                                icon="lock"
                                                iconPosition="left"
                                                onChange={[Function]}
                                                placeholder="Password"
                                                required={true}
                                                type="password"
                                                value=""
                                />
                                <Button
                                                as="button"
                                                color="teal"
                                                fluid={true}
                                                size="large"
                                                type="submit"
                                >
                                                Login
                                </Button>
                </Segment>
</Form>,
            ],
            "style": Object {
              "maxWidth": 450,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "as": "h2",
                "children": "Log-in to your account",
                "color": "teal",
                "textAlign": "center",
              },
              "ref": null,
              "rendered": "Log-in to your account",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "content": "Invalid username or password",
                "data-test": "error",
                "error": true,
                "header": "Login failed",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "form",
                "children": <Segment
                  stacked={true}
>
                  <FormInput
                                    as={[Function]}
                                    control={[Function]}
                                    data-test="username"
                                    fluid={true}
                                    icon="user"
                                    iconPosition="left"
                                    onChange={[Function]}
                                    placeholder="Username"
                                    required={true}
                                    value=""
                  />
                  <FormInput
                                    as={[Function]}
                                    control={[Function]}
                                    data-test="password"
                                    fluid={true}
                                    icon="lock"
                                    iconPosition="left"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    required={true}
                                    type="password"
                                    value=""
                  />
                  <Button
                                    as="button"
                                    color="teal"
                                    fluid={true}
                                    size="large"
                                    type="submit"
                  >
                                    Login
                  </Button>
</Segment>,
                "data-test": "form",
                "onSubmit": [Function],
                "size": "large",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      data-test="username"
                      fluid={true}
                      icon="user"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Username"
                      required={true}
                      value=""
/>,
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      data-test="password"
                      fluid={true}
                      icon="lock"
                      iconPosition="left"
                      onChange={[Function]}
                      placeholder="Password"
                      required={true}
                      type="password"
                      value=""
/>,
                    <Button
                      as="button"
                      color="teal"
                      fluid={true}
                      size="large"
                      type="submit"
>
                      Login
</Button>,
                  ],
                  "stacked": true,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": [Function],
                      "control": [Function],
                      "data-test": "username",
                      "fluid": true,
                      "icon": "user",
                      "iconPosition": "left",
                      "onChange": [Function],
                      "placeholder": "Username",
                      "required": true,
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": [Function],
                      "control": [Function],
                      "data-test": "password",
                      "fluid": true,
                      "icon": "lock",
                      "iconPosition": "left",
                      "onChange": [Function],
                      "placeholder": "Password",
                      "required": true,
                      "type": "password",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "button",
                      "children": "Login",
                      "color": "teal",
                      "fluid": true,
                      "size": "large",
                      "type": "submit",
                    },
                    "ref": null,
                    "rendered": "Login",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    Symbol(enzyme.__options__): Object {
      "adapter": ReactSixteenAdapter {
        "options": Object {
          "enableComponentDidUpdateOnSetState": true,
        },
      },
    },
  },
  Symbol(enzyme.__unrendered__): null,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "content": "Invalid username or password",
      "data-test": "error",
      "error": true,
      "header": "Login failed",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "content": "Invalid username or password",
        "data-test": "error",
        "error": true,
        "header": "Login failed",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Login Component starts with an empty form 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    form={
        Object {
            "password": "",
            "username": "",
          }
    }
    onChangePassword={[Function]}
    onChangeUser={[Function]}
    onSubmit={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <GridColumn
        style={
                Object {
                        "maxWidth": 450,
                      }
        }
>
        <Header
                as="h2"
                color="teal"
                textAlign="center"
        >
                Log-in to your account
        </Header>
        <Form
                as="form"
                data-test="form"
                onSubmit={[Function]}
                size="large"
        >
                <Segment
                        stacked={true}
                >
                        <FormInput
                                as={[Function]}
                                control={[Function]}
                                data-test="username"
                                fluid={true}
                                icon="user"
                                iconPosition="left"
                                onChange={[Function]}
                                placeholder="Username"
                                required={true}
                                value=""
                        />
                        <FormInput
                                as={[Function]}
                                control={[Function]}
                                data-test="password"
                                fluid={true}
                                icon="lock"
                                iconPosition="left"
                                onChange={[Function]}
                                placeholder="Password"
                                required={true}
                                type="password"
                                value=""
                        />
                        <Button
                                as="button"
                                color="teal"
                                fluid={true}
                                size="large"
                                type="submit"
                        >
                                Login
                        </Button>
                </Segment>
        </Form>
</GridColumn>,
      "style": Object {
        "height": "100%",
      },
      "textAlign": "center",
      "verticalAlign": "middle",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Header
            as="h2"
            color="teal"
            textAlign="center"
>
            Log-in to your account
</Header>,
          null,
          <Form
            as="form"
            data-test="form"
            onSubmit={[Function]}
            size="large"
>
            <Segment
                        stacked={true}
            >
                        <FormInput
                                    as={[Function]}
                                    control={[Function]}
                                    data-test="username"
                                    fluid={true}
                                    icon="user"
                                    iconPosition="left"
                                    onChange={[Function]}
                                    placeholder="Username"
                                    required={true}
                                    value=""
                        />
                        <FormInput
                                    as={[Function]}
                                    control={[Function]}
                                    data-test="password"
                                    fluid={true}
                                    icon="lock"
                                    iconPosition="left"
                                    onChange={[Function]}
                                    placeholder="Password"
                                    required={true}
                                    type="password"
                                    value=""
                        />
                        <Button
                                    as="button"
                                    color="teal"
                                    fluid={true}
                                    size="large"
                                    type="submit"
                        >
                                    Login
                        </Button>
            </Segment>
</Form>,
        ],
        "style": Object {
          "maxWidth": 450,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "h2",
            "children": "Log-in to your account",
            "color": "teal",
            "textAlign": "center",
          },
          "ref": null,
          "rendered": "Log-in to your account",
          "type": [Function],
        },
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "form",
            "children": <Segment
              stacked={true}
>
              <FormInput
                            as={[Function]}
                            control={[Function]}
                            data-test="username"
                            fluid={true}
                            icon="user"
                            iconPosition="left"
                            onChange={[Function]}
                            placeholder="Username"
                            required={true}
                            value=""
              />
              <FormInput
                            as={[Function]}
                            control={[Function]}
                            data-test="password"
                            fluid={true}
                            icon="lock"
                            iconPosition="left"
                            onChange={[Function]}
                            placeholder="Password"
                            required={true}
                            type="password"
                            value=""
              />
              <Button
                            as="button"
                            color="teal"
                            fluid={true}
                            size="large"
                            type="submit"
              >
                            Login
              </Button>
</Segment>,
            "data-test": "form",
            "onSubmit": [Function],
            "size": "large",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  data-test="username"
                  fluid={true}
                  icon="user"
                  iconPosition="left"
                  onChange={[Function]}
                  placeholder="Username"
                  required={true}
                  value=""
/>,
                <FormInput
                  as={[Function]}
                  control={[Function]}
                  data-test="password"
                  fluid={true}
                  icon="lock"
                  iconPosition="left"
                  onChange={[Function]}
                  placeholder="Password"
                  required={true}
                  type="password"
                  value=""
/>,
                <Button
                  as="button"
                  color="teal"
                  fluid={true}
                  size="large"
                  type="submit"
>
                  Login
</Button>,
              ],
              "stacked": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": [Function],
                  "control": [Function],
                  "data-test": "username",
                  "fluid": true,
                  "icon": "user",
                  "iconPosition": "left",
                  "onChange": [Function],
                  "placeholder": "Username",
                  "required": true,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "as": [Function],
                  "control": [Function],
                  "data-test": "password",
                  "fluid": true,
                  "icon": "lock",
                  "iconPosition": "left",
                  "onChange": [Function],
                  "placeholder": "Password",
                  "required": true,
                  "type": "password",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "children": "Login",
                  "color": "teal",
                  "fluid": true,
                  "size": "large",
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Login",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <GridColumn
          style={
                    Object {
                              "maxWidth": 450,
                            }
          }
>
          <Header
                    as="h2"
                    color="teal"
                    textAlign="center"
          >
                    Log-in to your account
          </Header>
          <Form
                    as="form"
                    data-test="form"
                    onSubmit={[Function]}
                    size="large"
          >
                    <Segment
                              stacked={true}
                    >
                              <FormInput
                                        as={[Function]}
                                        control={[Function]}
                                        data-test="username"
                                        fluid={true}
                                        icon="user"
                                        iconPosition="left"
                                        onChange={[Function]}
                                        placeholder="Username"
                                        required={true}
                                        value=""
                              />
                              <FormInput
                                        as={[Function]}
                                        control={[Function]}
                                        data-test="password"
                                        fluid={true}
                                        icon="lock"
                                        iconPosition="left"
                                        onChange={[Function]}
                                        placeholder="Password"
                                        required={true}
                                        type="password"
                                        value=""
                              />
                              <Button
                                        as="button"
                                        color="teal"
                                        fluid={true}
                                        size="large"
                                        type="submit"
                              >
                                        Login
                              </Button>
                    </Segment>
          </Form>
</GridColumn>,
        "style": Object {
          "height": "100%",
        },
        "textAlign": "center",
        "verticalAlign": "middle",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Header
              as="h2"
              color="teal"
              textAlign="center"
>
              Log-in to your account
</Header>,
            null,
            <Form
              as="form"
              data-test="form"
              onSubmit={[Function]}
              size="large"
>
              <Segment
                            stacked={true}
              >
                            <FormInput
                                          as={[Function]}
                                          control={[Function]}
                                          data-test="username"
                                          fluid={true}
                                          icon="user"
                                          iconPosition="left"
                                          onChange={[Function]}
                                          placeholder="Username"
                                          required={true}
                                          value=""
                            />
                            <FormInput
                                          as={[Function]}
                                          control={[Function]}
                                          data-test="password"
                                          fluid={true}
                                          icon="lock"
                                          iconPosition="left"
                                          onChange={[Function]}
                                          placeholder="Password"
                                          required={true}
                                          type="password"
                                          value=""
                            />
                            <Button
                                          as="button"
                                          color="teal"
                                          fluid={true}
                                          size="large"
                                          type="submit"
                            >
                                          Login
                            </Button>
              </Segment>
</Form>,
          ],
          "style": Object {
            "maxWidth": 450,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "h2",
              "children": "Log-in to your account",
              "color": "teal",
              "textAlign": "center",
            },
            "ref": null,
            "rendered": "Log-in to your account",
            "type": [Function],
          },
          null,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "form",
              "children": <Segment
                stacked={true}
>
                <FormInput
                                as={[Function]}
                                control={[Function]}
                                data-test="username"
                                fluid={true}
                                icon="user"
                                iconPosition="left"
                                onChange={[Function]}
                                placeholder="Username"
                                required={true}
                                value=""
                />
                <FormInput
                                as={[Function]}
                                control={[Function]}
                                data-test="password"
                                fluid={true}
                                icon="lock"
                                iconPosition="left"
                                onChange={[Function]}
                                placeholder="Password"
                                required={true}
                                type="password"
                                value=""
                />
                <Button
                                as="button"
                                color="teal"
                                fluid={true}
                                size="large"
                                type="submit"
                >
                                Login
                </Button>
</Segment>,
              "data-test": "form",
              "onSubmit": [Function],
              "size": "large",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    data-test="username"
                    fluid={true}
                    icon="user"
                    iconPosition="left"
                    onChange={[Function]}
                    placeholder="Username"
                    required={true}
                    value=""
/>,
                  <FormInput
                    as={[Function]}
                    control={[Function]}
                    data-test="password"
                    fluid={true}
                    icon="lock"
                    iconPosition="left"
                    onChange={[Function]}
                    placeholder="Password"
                    required={true}
                    type="password"
                    value=""
/>,
                  <Button
                    as="button"
                    color="teal"
                    fluid={true}
                    size="large"
                    type="submit"
>
                    Login
</Button>,
                ],
                "stacked": true,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": [Function],
                    "control": [Function],
                    "data-test": "username",
                    "fluid": true,
                    "icon": "user",
                    "iconPosition": "left",
                    "onChange": [Function],
                    "placeholder": "Username",
                    "required": true,
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "as": [Function],
                    "control": [Function],
                    "data-test": "password",
                    "fluid": true,
                    "icon": "lock",
                    "iconPosition": "left",
                    "onChange": [Function],
                    "placeholder": "Password",
                    "required": true,
                    "type": "password",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "children": "Login",
                    "color": "teal",
                    "fluid": true,
                    "size": "large",
                    "type": "submit",
                  },
                  "ref": null,
                  "rendered": "Login",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
